#!/usr/bin/env bash

set -Eeo pipefail

cd "$(dirname "${BASH_SOURCE[0]}")"
source "install-shared.bash"

subm_dir="rust-fil-sector-builder"

git submodule update --init --recursive $subm_dir

if download_release_tarball tarball_path "${subm_dir}"; then
    tmp_dir=$(mktemp -d)
    tar -C "$tmp_dir" -xzf "$tarball_path"

    cp "${tmp_dir}/include/sector_builder_ffi.h" .
    cp "${tmp_dir}/lib/libsector_builder_ffi.a" .
    cp "${tmp_dir}/lib/pkgconfig/sector_builder_ffi.pc" .

    cp "${tmp_dir}/bin/paramcache" .
else
    (>&2 echo "failed to find or obtain precompiled assets for ${subm_dir} - falling back to local build")
    build_from_source "${subm_dir}"

    mkdir -p include
    mkdir -p lib/pkgconfig

    find "${subm_dir}/target/release" -type f -name sector_builder_ffi.h -exec cp -- "{}" . \;
    find "${subm_dir}/target/release" -type f -name libsector_builder_ffi.a -exec cp -- "{}" . \;
    find "${subm_dir}" -type f -name sector_builder_ffi.pc -exec cp -- "{}" . \;

    if [[ ! -f "./sector_builder_ffi.h" ]]; then
        (>&2 echo "failed to install sector_builder_ffi.h")
        exit 1
    fi

    if [[ ! -f "./libsector_builder_ffi.a" ]]; then
        (>&2 echo "failed to install libsector_builder_ffi.a")
        exit 1
    fi

    if [[ ! -f "./sector_builder_ffi.pc" ]]; then
        (>&2 echo "failed to install sector_builder_ffi.pc")
        exit 1
    fi

    (>&2 echo "WARNING: paramcache was not installed - you may wish to 'cargo install' it")
fi
